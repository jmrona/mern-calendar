{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventSetActive","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","useDispatch","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowEnd","clone","initialEvent","notes","CalendarModal","dateStart","setDateStart","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","text","icon","focusCancel","showCancelButton","confirmButtonColor","confirmButtonText","then","result","isConfirmed","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSeleted","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.021ba32f.chunk.js","sourcesContent":["export const types = {\r\n    // Modal\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    // Events\r\n    eventAddNew: '[event] Add new',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventSetActive: '[event] Set active',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n    eventLogout: '[event] Event logout',\r\n\r\n    // Auth\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: 'asdasd',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hour').toDate(),\r\n//     notes: 'Comprar tarta',\r\n//     user: {\r\n//         _id: '1234',\r\n//         name: 'Jose'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => (event.id === action.payload.id) ? action.payload : event\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => (event.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n})","import { applyMiddleware, createStore, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`; //localhost:4000/api/auth\r\n\r\n    if( method === 'GET'){\r\n        return fetch( url );\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchConToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`; //localhost:4000/api/auth\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET'){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map( event => ({\r\n            ...event,\r\n            end: moment( event.end ).toDate(),\r\n            start: moment( event.start ).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState )=> {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            console.log(body);\r\n\r\n            if( body.ok ){\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch( eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        try{\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch( eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.events);\r\n            dispatch(eventLoaded(events))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout})\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n \r\nexport const startLogin = (email, password) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () =>{\r\n    return async(dispatch) => {\r\n        const resp = await fetchConToken( 'auth/renew');\r\n        const body = await resp.json();\r\n        \r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n    \r\n    const handleInputChange = ({target}) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [ formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'jmrona@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Pedro',\r\n        rEmail: 'pedrooo@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin( lEmail, lPassword ));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Comprobamos que las contraseñas coincidan\r\n        if( rPassword1 !== rPassword2){\r\n            return Swal.fire('Error','Las contraseñas no coinciden','error')\r\n        }\r\n        dispatch(startRegister( rName, rEmail, rPassword1 ));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            <strong> {title} </strong>\r\n            <span>- {user.name} </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 12:00:00\r\nconst nowEnd = now.clone().add(1, 'hours'); // 13:00:00\r\n\r\nconst initialEvent = {\r\n    title: 'Evento',\r\n    notes: [],\r\n    start: now.toDate(),\r\n    end: nowEnd.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(nowEnd.toDate())\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch()\r\n\r\n    const [formValues, setFormValues] = useState( initialEvent )\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        }else {\r\n            setFormValues( initialEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal())\r\n        dispatch( eventClearActiveEvent() )\r\n        setFormValues( initialEvent )\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd )){\r\n            Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error')\r\n            return;\r\n        }\r\n\r\n        if ( title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if( activeEvent?.id ){\r\n            dispatch( eventStartUpdate(formValues) )\r\n        }else{\r\n            dispatch( eventStartAddNew(formValues));\r\n        }\r\n        \r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                // onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h2> { (activeEvent?.id) ? 'Editar Evento' : 'Nuevo evento'} </h2>\r\n                <i \r\n                    className=\"fas fa-times closeTag\"\r\n                    onClick={closeModal}\r\n                ></i>\r\n                <hr/>\r\n                <form \r\n                    className=\"container\"\r\n                    onSubmit={ handleSubmitForm }\r\n                >\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                            value={start}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={handleEndDateChange}\r\n                            value={end}\r\n                            minDate={ dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={title}\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={ handleInputChange }\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = () => {\r\n        dispatch( uiOpenModal() )\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleOpenModal }\r\n        >\r\n            <i className=\" fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { eventClearActiveEvent, eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDeleteEvent = () => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: 'If you delete this event, you will not recover it',\r\n            icon: 'warning',\r\n            // showDenyButton: true,\r\n            focusCancel: true,\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#cc0000',\r\n            confirmButtonText: `Delete`,\r\n            // denyButtonText: `Don't delete`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              Swal.fire('Deleted!', 'Your event has been deleted.', 'success')\r\n              dispatch( eventStartDelete() )\r\n            }else{\r\n              dispatch( eventClearActiveEvent() )\r\n            }\r\n          })\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className =\"btn btn-danger fab-danger\"\r\n            onClick={handleDeleteEvent}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month')\r\n\r\n    const dispatch = useDispatch()\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    // Carga los eventos creados\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        const {start, end} = e;\r\n\r\n        if( !activeEvent ){\r\n            dispatch( eventSetActive({title: 'Evento', start, end, notes: []}) )\r\n            dispatch( uiOpenModal() )\r\n        }else{\r\n            dispatch( eventClearActiveEvent() );\r\n        }\r\n    }\r\n    \r\n    const eventStyleGetter = ( event, start, end, isSeleted) => {\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent= {onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab/>\r\n            <CalendarModal/>\r\n            { \r\n                (activeEvent) && <DeleteEventFab/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                (isAuthenticated) \r\n                    ? (<Component { ...props } />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                (!isAuthenticated) \r\n                    ? (<Component { ...props } />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n        \r\n    useEffect(() => {\r\n        dispatch( startChecking() )\r\n    }, [dispatch])\r\n\r\n    if( checking ){\r\n        return (<h4>Espere...</h4>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                \r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen}\r\n                        isAuthenticated={ !!uid } // Lo convertimos en boolean\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact \r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={ !!uid } // Lo convertimos en boolean\r\n                    />\r\n\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CalendarApp} from './CalendarApp';\n\nimport './styles.css'\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}